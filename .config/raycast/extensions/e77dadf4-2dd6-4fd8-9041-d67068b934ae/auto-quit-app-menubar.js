"use strict";var T=Object.create;var m=Object.defineProperty;var F=Object.getOwnPropertyDescriptor;var L=Object.getOwnPropertyNames;var P=Object.getPrototypeOf,k=Object.prototype.hasOwnProperty;var _=(t,n)=>{for(var e in n)m(t,e,{get:n[e],enumerable:!0})},w=(t,n,e,s)=>{if(n&&typeof n=="object"||typeof n=="function")for(let r of L(n))!k.call(t,r)&&r!==e&&m(t,r,{get:()=>n[r],enumerable:!(s=F(n,r))||s.enumerable});return t};var v=(t,n,e)=>(e=t!=null?T(P(t)):{},w(n||!t||!t.__esModule?m(e,"default",{value:t,enumerable:!0}):e,t)),M=t=>w(m({},"__esModule",{value:!0}),t);var V={};_(V,{default:()=>N});module.exports=M(V);var i=require("@raycast/api");var c=require("react"),f=require("@raycast/api");var S=require("@raycast/api");var a=new S.Cache;var E=v(require("node:process"),1),I=require("node:util"),g=require("node:child_process"),W=(0,I.promisify)(g.execFile);async function l(t,{humanReadableOutput:n=!0}={}){if(E.default.platform!=="darwin")throw new Error("macOS only");let e=n?[]:["-ss"],{stdout:s}=await W("osascript",["-e",t,e]);return s.trim()}var R=require("@raycast/api");async function A(t){for(let n=0;n<t.length;n++)try{let e=t[n].name;if(await x(e)&&!await B(e)&&!await C(e)){let s=`
tell application "${e}"
   quit
end tell`;await l(s)}}catch(e){console.error(e)}}async function Q(t){for(let n=0;n<t.length;n++)try{let e=t[n].name;if(await x(e)){let r=`tell application "${e}"
   quit
end tell`;await l(r)}}catch(e){console.error(e)}}async function B(t){try{return(await(0,R.getFrontmostApplication)())?.name==t}catch(n){return console.error(n),!1}}async function x(t){let n=`if application "${t}" is running then
	return true
else
	return false
end if`;try{return await l(n)=="true"}catch(e){return console.error(e),!1}}async function C(t){let n=`set appName to "${t}"
if application appName is running then
  tell application "System Events" to tell process appName
    set windowCount to count of (get every window)
    return windowCount > 0
  end tell
  return false
end if
`;try{return await l(n)=="true"}catch{return!1}}var b=require("@raycast/api"),{layout:J,columns:X,itemInset:z,refreshInterval:h}=(0,b.getPreferenceValues)();var q=()=>{let[t,n]=(0,c.useState)(!0),[e,s]=(0,c.useState)([]),r=(0,c.useCallback)(async()=>{n(!0);let u=[];try{let p=a.get("Quit App");typeof p=="string"&&(u=JSON.parse(p)),s(u)}catch(p){console.error(p)}if(f.environment.launchType==f.LaunchType.Background){let p=a.get("Refresh Interval"),d=5;if(typeof p=="string"&&(d=parseInt(p)),d==h)await A(u),a.set("Refresh Interval","5");else{let y=d+5;y>h?(await A(u),a.set("Refresh Interval","5")):a.set("Refresh Interval",String(y))}}else await A(u),a.set("Refresh Interval","5");n(!1)},[]);return(0,c.useEffect)(()=>{r()},[r]),{quitApps:e,loading:t}};var o=require("react/jsx-runtime");function N(){let{quitApps:t,loading:n}=q();return(0,o.jsxs)(i.MenuBarExtra,{icon:{source:{light:"menu-bar-icon.png",dark:"menu-bar-icon@dark.png"}},isLoading:n,tooltip:"Auto Quit App",children:[t.length!==0&&(0,o.jsx)(i.MenuBarExtra.Section,{title:"Auto Quit Apps",children:t?.map(e=>(0,o.jsx)(i.MenuBarExtra.Item,{title:e.name,icon:{fileIcon:e.path},tooltip:`Open ${e.name}`,onAction:async()=>{await(0,i.open)(e.path)}},e.name))}),t.length!==0&&(0,o.jsx)(i.MenuBarExtra.Section,{children:(0,o.jsx)(i.MenuBarExtra.Item,{title:"Quit All Apps",icon:i.Icon.XMarkTopRightSquare,shortcut:{modifiers:["cmd"],key:"q"},onAction:async()=>{await Q(t)}})}),(0,o.jsx)(i.MenuBarExtra.Section,{children:(0,o.jsx)(i.MenuBarExtra.Item,{title:"Set Auto Quit App",icon:i.Icon.AppWindowGrid3x3,shortcut:{modifiers:["cmd"],key:"s"},onAction:()=>{(0,i.launchCommand)({name:"set-auto-quit-app",type:i.LaunchType.UserInitiated}).then()}})}),(0,o.jsx)(i.MenuBarExtra.Section,{children:(0,o.jsx)(i.MenuBarExtra.Item,{title:"Preferences",icon:i.Icon.Gear,shortcut:{modifiers:["cmd"],key:","},onAction:()=>{(0,i.openCommandPreferences)().then(()=>null)}})})]})}
